{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./client/app/app.component.ts","./client/app/app.component.html","./client/app/app.module.ts","./client/app/services/DataService.ts","./client/environments/environment.ts","./client/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;;;;;;;;;;ICG9C,4EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,yDACF;IADE,0FACF;;;;IAQM,+EAAqD;IAAA,uDAAwC;IAAA,4DAAS;;;IAAnE,6EAAiB;IAAC,yDAAwC;IAAxC,kHAAwC;;ADJhG,MAAM,YAAY;IAkBvB,YAAoB,SAAsB,EAAU,YAAyB;QAAzD,cAAS,GAAT,SAAS,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAhB7E,aAAQ,GAAW,kBAAkB,CAAC;QACtC,eAAU,GAAW,CAAC,CAAC;QACvB,YAAO,GAAW,EAAE,CAAC;QACrB,UAAK,GAAG;YACN;gBACE,EAAE,EAAE,CAAC;gBACL,UAAU,EAAE,OAAO;gBACnB,MAAM,EAAE,WAAW;aACpB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,UAAU,EAAE,MAAM;gBAClB,MAAM,EAAE,WAAW;aACpB;SACF,CAAC;IAGF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YACnB,YAAY,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC,MAAM,CAAC;YACd,eAAe,EAAE,CAAC,EAAE,CAAC;SACtB,CAAC,CAAC;IACL,CAAC;IAKD,IAAI;QACF,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAClC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;IAC5B,CAAC;;sGAvCU,YAAY,wFAAZ,YAAY;QCTzB,2EACE;QAAA,2EACE;QAAA,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,0GACE;QAGF,sEAAK;QAAA,uDAAmB;QAAA,4DAAM;QAE9B,4EACE;QADe,8IAAY,UAAM,IAAC;QAClC,2EACE;QAAA,wEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACrB,+EACE;QAAA,kHAAqD;QACvD,4DAAS;QACX,4DAAM;QACN,4EACE;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,yEACF;QAAA,4DAAM;QACN,4EACE;QAAA,yEAAO;QAAA,8FAAkC;QAAA,4DAAQ;QACjD,yEACF;QAAA,4DAAM;QACN,4EACE;QAAA,yEAAO;QAAA,0EAAc;QAAA,4DAAQ;QAC7B,yEACF;QAAA,4DAAM;QACN,4EACE;QAAA,yEAAO;QAAA,2EAAe;QAAA,4DAAQ;QAC9B,6EAA4G;QAC9G,4DAAM;QACN,4EACE;QAAA,2EAAsC;QAAA,kEAAM;QAAA,4DAAI;QAChD,gFAA8C;QAAA,yEAAa;QAAA,4DAAS;QACtE,4DAAM;QACR,4DAAO;QAET,4DAAM;QACR,4DAAM;;QApCiC,yDAAe;QAAf,6EAAe;QAI7C,yDAAmB;QAAnB,2FAAmB;QAEa,yDAAqB;QAArB,kFAAqB;QAI5C,0DAA0B;QAA1B,8EAA0B;;8EDJ/B,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACM;AACA;;AAgB9C,MAAM,SAAS;;+FAAT,SAAS,cAFR,2DAAY;qJAEb,SAAS,mBALT;QACT,iEAAW;KACZ,YAPQ;YACP,uEAAa;YACb,kEAAmB;SAEpB;+EAMU,SAAS,mBAZlB,2DAAY,aAGZ,uEAAa;QACb,kEAAmB;8EAQV,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,kEAAmB;iBAEpB;gBACD,SAAS,EAAE;oBACT,iEAAW;iBACZ;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,WAAW;IAHxB;QAKE,aAAQ,GAAW,GAAG,CAAC;KAMxB;IAJC,aAAa,CAAC,QAAQ;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;;wGANU,WAAW,8DAAX,WAAW,oBAFV,MAAM;8EAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './services/DataService';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'theApp',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n}) \nexport class AppComponent implements OnInit {\r\n  theForm: FormGroup;\n  employee: string = \"Shawn Wildermuth\";\n  employeeId: Number = 1;\n  message: string = \"\";\n  cases = [\n    {\n      id: 1,\r\n      fileNumber: \"12345\",\r\n      client: \"Jones, M.\"\r\n    },\n    {\n      id: 2,\r\n      fileNumber: \"1235\",\r\n      client: \"Smith, J.\"\r\n    },\n  ];\n\n  constructor(private _formBldr: FormBuilder, private _dataService: DataService) {\n  }\n\n  ngOnInit(): void {\r\n    this.theForm = this._formBldr.group({\r\n      caseId: [\"\"],\r\n      start: [new Date()],\r\n      timeSegments: [0],\r\n      rate: [120.00],\r\n      workDescription: [\"\"]\r\n    });\r\n  }\n\n\n\n\n  save() {\n    let timeBill = this.theForm.value;\n    timeBill.employeeId = this.employeeId;\n    this._dataService.saveTimesheet(timeBill);\r\n    this.message = \"Saved...\";\r\n  }\n}\n","<div class=\"row\">\r\n  <div class=\"col-6 offset-3\">\r\n    <h3>Add Timesheet</h3>\r\n    <div class=\"alert alert-secondary\" *ngIf=\"message\">\r\n      {{ message}}\r\n    </div>\r\n\r\n    <div>For: {{ employee }}</div>\r\n\r\n    <form novalidate (ngSubmit)=\"save()\" [formGroup]=\"theForm\">\r\n      <div class=\"form-group\">\r\n        <label>Case: </label>\r\n        <select class=\"form-control\" name=\"caseId\" formControlName=\"caseId\">\r\n          <option *ngFor=\"let case of cases\" [value]=\"case.id\">{{ case.client }}: {{ case.fileNumber }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Date:</label>\r\n        <input class=\"form-control\" name=\"workDate\" formControlName=\"workDate\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Time Segments (6 minute segments):</label>\r\n        <input class=\"form-control\" name=\"timeSegments\" formControlName=\"timeSegments\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Rate (in USD):</label>\r\n        <input class=\"form-control\" name=\"rate\" formControlName=\"rate\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Work Performed:</label>\r\n        <textarea class=\"form-control\" rows=\"3\" formControlName=\"workDescription\" name=\"workDescription\"></textarea>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <a href=\"/\" class=\"btn btn-secondary\">Cancel</a>\r\n        <button type=\"submit\" class=\"btn btn-success\">Add Time Bill</button>\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { DataService } from './services/DataService';\r\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n//    HttpClientModule\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  _baseUrl: string = \"/\"; \r\n\r\n  saveTimesheet(timeBill) {\r\n    return true;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}